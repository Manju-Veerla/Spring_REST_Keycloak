name: CI with Docker Compose

on:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start Docker Compose stack
        run: |
          docker compose up -d --build
          docker ps -a

      - name: Wait for Postgres to be healthy
        timeout-minutes: 5
        run: |
          until docker exec postgres pg_isready -U admin; do
            echo "Waiting for Postgres to be ready..."
            sleep 5
          done
          echo "Postgres is up!"

      - name: Wait for Keycloak to be healthy
        timeout-minutes: 5
        run: |
          until curl -s http://localhost:8081/health > /dev/null; do
            echo "Waiting for Keycloak to be ready..."
            sleep 5
          done
          echo "Keycloak is up!"
          docker logs keycloak

      - name: Wait for application to be healthy
        timeout-minutes: 5
        run: |
          until curl -s http://localhost:8080/actuator/health -H "Accept: application/json" | grep -q "\"status\":\"UP\""; do
            echo "Waiting for application to be ready..."
            sleep 5
          done
          echo "Application is up!"

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -xzf allure-2.27.0.tgz
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Build and test with Maven
        run: |
          echo "=== Current directory structure ==="
          find . -type d | sort
          
          echo "=== Maven version ==="
          mvn --version
          
          echo "=== Running tests with debug output ==="
          mvn clean test \
            -Dspring.profiles.active=test \
            -Dmaven.test.failure.ignore=true \
            -Dallure.results.directory=target/allure-results \
            -Djava.awt.headless=true \
            -X

      - name: Check test results
        if: always()
        run: |
          echo "=== Checking test results ==="
          echo "Allure results directory contents:"
          find target/allure-results -type f -name "*" -exec ls -la {} \;
          
          echo "=== TestNG reports ==="
          find target/surefire-reports -type f -name "*" -exec ls -la {} \;
          
          echo "=== Checking for Allure results ==="
          if [ -d "target/allure-results" ]; then
            echo "Allure results directory exists"
            if [ "$(ls -A target/allure-results)" ]; then
              echo "Allure results directory is not empty"
              echo "First few lines of test results:"
              find target/allure-results -type f -name "*.json" -exec head -n 5 {} \;
            else
              echo "ERROR: Allure results directory is empty"
            fi
          else
            echo "ERROR: Allure results directory does not exist"
          fi

      - name: Generate Allure report
        if: always()
        run: |
          echo "=== Generating Allure report ==="
          allure --version
          allure generate target/allure-results --clean -o target/allure-report --debug
          
          echo "=== Generated report contents ==="
          find target/allure-report -type f | sort

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: target/allure-report
          retention-days: 30

      - name: Upload TestNG Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: testng-report
          path: target/surefire-reports
          retention-days: 30

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Docker Compose Logs ==="
          docker compose logs
          echo "=== Application Logs ==="
          docker logs workshop-service

      - name: Tear down Docker Compose
        if: always()
        run: docker compose down -v