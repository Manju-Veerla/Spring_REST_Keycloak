name: CI with Docker Compose

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start Docker Compose stack
        run: |
          docker compose up -d --build
          docker ps -a

      - name: Wait for Postgres to be healthy
        timeout-minutes: 5
        run: |
          until docker exec postgres pg_isready -U admin; do
            echo "Waiting for Postgres to be ready..."
            sleep 5
          done
          echo "Postgres is up!"

      - name: Wait for Keycloak to be healthy
        timeout-minutes: 5
        run: |
          until curl -s http://localhost:8081/health > /dev/null; do
            echo "Waiting for Keycloak to be ready..."
            sleep 5
          done
          echo "Keycloak is up!"
          docker logs keycloak

      - name: Wait for application to be healthy
        timeout-minutes: 5
        run: |
          until curl -s http://localhost:8080/actuator/health -H "Accept: application/json" | grep -q "\"status\":\"UP\""; do
            echo "Waiting for application to be ready..."
            sleep 5
          done
          echo "Application is up!"

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: target/allure-results
          allure_report: target/allure-report

      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: target/allure-report

      - name: Deploy Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/allure-report

      - name: Upload TestNG Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: testng-report
          path: target/surefire-reports
          retention-days: 30

      - name: Show logs on failure
        if: failure()
        run: |
          echo "=== Docker Compose Logs ==="
          docker compose logs
          echo "=== Application Logs ==="
          docker logs workshop-service

      - name: Tear down Docker Compose
        if: always()
        run: docker compose down -v